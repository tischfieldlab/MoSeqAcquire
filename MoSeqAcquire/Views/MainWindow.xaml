<Window x:Class="MoSeqAcquire.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:v="clr-namespace:MoSeqAcquire.Views"
        xmlns:conv="clr-namespace:MoSeqAcquire.Views.Converters"
        xmlns:controls="clr-namespace:MoSeqAcquire.Views.Controls"
        xmlns:vm="clr-namespace:MoSeqAcquire.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="{Binding Path=MainWindowTitle}" Height="400" Width="1000">
    <Window.Resources>
        <ResourceDictionary>
            <conv:IsNullToBoolInvertConverter x:Key="IsNullToBoolInvertConverter" />
            <conv:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <conv:EnumEqualityConverter x:Key="EnumEqualityConverter" />
            <conv:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
            <conv:ObjectEqualityConverter x:Key="ObjectEqualityConverter" />
            <conv:TimeSpanFormatConverter x:Key="TimeSpanFormatConverter" />
            <conv:PackIconKindImageSourceConverter x:Key="PackIconKindImageSourceConverter" />
            <SolidColorBrush Color="Red" x:Key="RedSolidColorBrush" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="taskBarItemInfo1" 
                         Overlay="{Binding Path=TaskbarItemInfo.Overlay}"
                         ProgressState="{Binding Path=TaskbarItemInfo.ProgressState}"
                         ProgressValue="{Binding Path=TaskbarItemInfo.ProgressValue}"
                         Description="{Binding Path=TaskbarItemInfo.Description}">

            <!--<TaskbarItemInfo.ThumbButtonInfos >
                <ThumbButtonInfoCollection >
                    <ThumbButtonInfo
                        DismissWhenClicked="False"
                        Command="MediaCommands.Play"
                        Description="Play" IsBackgroundVisible="true"
                        ImageSource="{Binding Source={x:Static materialDesign:PackIconKind.Stop}, Converter={StaticResource PackIconKindImageSourceConverter}}"/>
                    <ThumbButtonInfo
                        DismissWhenClicked="False"
                        Command="MediaCommands.Stop"
                        Description="Stop" IsBackgroundVisible="false"
                        ImageSource="{Binding Source={x:Static materialDesign:PackIconKind.RecordRec}, Converter={StaticResource PackIconKindImageSourceConverter}}"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>-->
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <materialDesign:DialogHost Identifier="MainWindowDialogHost" Name="MainWindowDialogHost" Style="{StaticResource MaterialDesignEmbeddedDialogHost}" >
        <!--<materialDesign:DialogHost.CloseOnClickAway>True</materialDesign:DialogHost.CloseOnClickAway>
        <materialDesign:DialogHost.CloseOnClickAwayParameter>
            <system:Boolean>False</system:Boolean>
        </materialDesign:DialogHost.CloseOnClickAwayParameter>-->
        <materialDesign:DialogHost.DialogContentTemplate>
            <DataTemplate DataType="{x:Type vm:ConfirmDialogViewModel}">
                <controls:ConfirmDialog />
            </DataTemplate>
        </materialDesign:DialogHost.DialogContentTemplate>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
                
            
            <DockPanel Grid.Row="0">
                <v:SystemInfoView DockPanel.Dock="Right" Margin="0,0,0,0" />

                <Menu DockPanel.Dock="Left" IsMainMenu="True" >
                    <MenuItem Header="File">
                        <MenuItem Header="Add New">
                            <MenuItem Header="Media Source" Command="{Binding Path=Commands.AddMediaSource}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Camcorder" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Recorder" Command="{Binding Path=Commands.AddRecorder}" >
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Cassette" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Trigger" Command="{Binding Path=Commands.AddTrigger}" >
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="LightningBolt" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Save Protocol" Command="{Binding Path=Commands.SaveProtocol}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ContentSave" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Load Protocol" Command="{Binding Path=Commands.LoadProtocol}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="FolderOpen" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Recently Used" ItemsSource="{Binding Path=Protocol.RecentlyUsedProtocols}" >
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <controls:PathTrimmingTextBlock Path="{Binding}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Command" Value="{Binding Path=DataContext.Commands.LoadProtocol, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="Unload Protocol" Command="{Binding Path=Commands.UnloadProtocol}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Refresh" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Lock Protocol" Command="{Binding Path=Commands.ToggleProtocolLock}" IsCheckable="True" IsChecked="{Binding Path=Protocol.IsProtocolLocked, Mode=OneWay}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="SecurityLock" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    
                    <MenuItem Header="View">
                        <MenuItem Header="Theme" Command="{Binding Path=Commands.OpenThemeDialog}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Theme" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Performance" Command="{Binding Path=Commands.ShowPerformanceMonitor}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Pulse" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Preferences" Command="{Binding Path=Commands.OpenAppSettings}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Settings" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    
                </Menu>
            </DockPanel>
            

            <dockablz:Layout Grid.Row="1">
                <dragablz:TabablzControl BorderThickness="0" Margin="0,-1,0,1" >
                    <dragablz:TabablzControl.InterTabController>
                        <dragablz:InterTabController />
                    </dragablz:TabablzControl.InterTabController>
                    <TabItem Header="ACQUIRE">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <v:MediaSourceView HorizontalAlignment="Stretch" Grid.Column="0" Margin="8" />
                            <GridSplitter Grid.Column="1" 
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Stretch"
                                          ShowsPreview="True"
                                          Width="5" />
                            <v:RecordingConsoleView Grid.Column="2" DataContext="{Binding Path=Recorder}" />
                        </Grid>
                    </TabItem>
                </dragablz:TabablzControl>
            </dockablz:Layout>
        </Grid>
    </materialDesign:DialogHost>
</Window>
