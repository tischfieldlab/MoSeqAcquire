<UserControl x:Class="MoSeqAcquire.Views.Metadata.MetadataList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MoSeqAcquire.Views.Controls.MetadataEditor"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behv="clr-namespace:MoSeqAcquire.Views.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary Source="ControlTemplates.xaml" />
    </UserControl.Resources>
    <!--<ListView Margin="0"
                  HorizontalContentAlignment="Stretch"
                  ItemsSource="{Binding Path=Items}"
                  IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsProtocolForceLocked, Converter={StaticResource BooleanInvertConverter}}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Name}" />
                        <TextBlock VerticalAlignment="Center" 
                                   Margin="16,0"
                                   Foreground="{DynamicResource MaterialDesignBodyLight}"
                                   Text="{Binding Path=ValueType.Name, StringFormat={}({0})}" />
                        <TextBlock VerticalAlignment="Center" 
                                   Margin="16,0"
                                   DockPanel.Dock="Right"
                                   Visibility="{Binding Path=Units, Converter={StaticResource StringEmptyVisibilityConverter}}"
                                   Foreground="{DynamicResource MaterialDesignBodyLight}"
                                   Text="{Binding Path=Units, StringFormat={}({0})}" />
                        <TextBlock Text="{Binding Path=Error}" />
                        <ContentPresenter VerticalAlignment="Center" ContentTemplateSelector="{StaticResource MetadataItemEditorDataTemplateSelector}" />
                    </DockPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>-->
    <GroupBox Header="{Binding}" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16,8" >
        <Validation.ErrorTemplate>
            <ControlTemplate />
        </Validation.ErrorTemplate>
        <GroupBox.HeaderTemplate>
            <DataTemplate>
                <DockPanel>
                    <Button DockPanel.Dock="Right" Width="24" Height="24" Margin="8,0,8,0"
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            Command="{Binding Path=Root.Commands.ShowMetadataDefinitionWindow}"
                            ToolTip="Edit Metadata Template">
                        <materialDesign:PackIcon Kind="Pencil"  />
                    </Button>
                    <Button DockPanel.Dock="Right" Width="24" Height="24" Margin="8,0,8,0"
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            Command="{Binding Path=Root.Commands.ResetMetadataItemValues}"
                            ToolTip="Reset Metadata Values">
                        <materialDesign:PackIcon Kind="Restore"  />
                    </Button>
                    <TextBlock Text="Recording Metadata" VerticalAlignment="Center" />
                </DockPanel>
            </DataTemplate>
        </GroupBox.HeaderTemplate>
        <DataGrid Margin="-9" DataContext="{Binding Path=RecordingMetadata}"
              HorizontalContentAlignment="Stretch"
              ItemsSource="{Binding Path=Items}"
              SelectedItem="{Binding Path=CurrentItem}"
              IsSynchronizedWithCurrentItem="True"
              AutoGenerateColumns="False"
              HeadersVisibility="None"
              CanUserResizeRows="False" 
              CanUserReorderColumns="False"
              SelectionMode="Single"
              GridLinesVisibility="None"
              DataGridCell.GotFocus="DataGridCell_OnSelected"
              >
            <Validation.ErrorTemplate>
                <ControlTemplate />
            </Validation.ErrorTemplate>
            <DataGrid.Style>
                <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" Margin="8" FontStyle="Italic">
                                                No metadata items have been added yet. Would you like to 
                                                <Hyperlink Command="{Binding Path=DataContext.Commands.ShowMetadataDefinitionWindow, RelativeSource={RelativeSource AncestorType=Window}}"
                                                           Style="{StaticResource MaterialDesignBody1Hyperlink}">
                                                    add one
                                                </Hyperlink>?
                                            </TextBlock>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Name" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Path=Name}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>



                <DataGridTemplateColumn Header="Value"
                                        IsReadOnly="False"
                                        Width="*"
                                        CellTemplateSelector="{StaticResource MetadataItemEditorDataTemplateSelector}"
                                        CellEditingTemplateSelector="{StaticResource MetadataItemEditorDataTemplateSelector}"/>

                <DataGridTemplateColumn Header="Units and Type" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Text="(" Foreground="{DynamicResource MaterialDesignBodyLight}" />

                                <TextBlock Text="{Binding Path=Units}"
                                           Visibility="{Binding Path=HasUnits, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           FontStyle="Italic"
                                           Foreground="{DynamicResource MaterialDesignBodyLight}" />

                                <TextBlock Text=", " 
                                           Visibility="{Binding Path=HasUnits, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           Foreground="{DynamicResource MaterialDesignBodyLight}" />

                                <TextBlock Text="{Binding Path=ValueType.Name}" Foreground="{DynamicResource MaterialDesignBodyLight}" />

                                <TextBlock Text=")" Foreground="{DynamicResource MaterialDesignBodyLight}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </GroupBox>
</UserControl>
